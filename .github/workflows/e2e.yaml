name: e2e tests
on:
  pull_request:

concurrency:
  group: e2e-tests=full-${{ github.head_ref || github.ref }}-${{ github.repository }}
  cancel-in-progress: true

jobs:
  prepare-build:
    name: Wait for the PR project to build
    runs-on: ubuntu-latest
    outputs:
      chart_name: ${{ steps.chart.outputs.chart_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Wait for OBS crds chart
        uses: "./.github/actions/wait-commit-status"
        with:
          repository: ${{ github.repository }}
          commit: ${{ github.event.pull_request.head.sha }}
          context: "OBS: elemental-operator-crds-helm - charts/x86_64"
          status: "success"
          interval: 60
          retries: 10
      - name: Wait for OBS operator chart
        uses: "./.github/actions/wait-commit-status"
        with:
          repository: ${{ github.repository }}
          commit: ${{ github.event.pull_request.head.sha }}
          context: "OBS: elemental-operator-helm - charts/x86_64"
          status: "success"
          interval: 60
          retries: 10
      - name: Wait for OBS elemental-operator package
        uses: "./.github/actions/wait-commit-status"
        with:
          repository: ${{ github.repository }}
          commit: ${{ github.event.pull_request.head.sha }}
          context: "OBS: elemental-operator - standard/x86_64"
          status: "success"
          interval: 60
          retries: 30
      - name: Wait for OBS seedimage-builder build
        uses: "./.github/actions/wait-commit-status"
        with:
          repository: ${{ github.repository }}
          commit: ${{ github.event.pull_request.head.sha }}
          context: "OBS: seedimage-builder - containers/x86_64"
          status: "success"
          interval: 60
          retries: 30
      - name: Wait for OBS operator-image build
        uses: "./.github/actions/wait-commit-status"
        with:
          repository: ${{ github.repository }}
          commit: ${{ github.event.pull_request.head.sha }}
          context: "OBS: operator-image - containers/x86_64"
          status: "success"
          interval: 60
          retries: 30
      - name: Pull chart for PR
        env:
          PR_NUMBER: ${{ github.event.number }}
          OPERATOR_CHART: rancher/elemental-operator-chart
          CRDS_CHART: rancher/elemental-operator-crds-chart
        run: |
          set -x
          B_REPO=registry.opensuse.org/isv/rancher/elemental/pr/rancher/elemental-operator/pr-${PR_NUMBER}/charts
          mkdir -p build
          helm pull -d build oci://${B_REPO}/${CRDS_CHART}
          helm pull -d build oci://${B_REPO}/${OPERATOR_CHART}
      - name: Set chart output
        id: chart
        run: |
          set -x
          FILE=$(find . -type f  -name "elemental-operator-chart-[1-9]*.tgz" -print)
          CHART=$(basename $FILE)
          echo "chart_name=$CHART" >> $GITHUB_OUTPUT
      - name: Upload chart
        uses: actions/upload-artifact@v3.1.0
        with:
          name: chart
          path: build/*.tgz

  e2e-tests:
    strategy:
      matrix:
        kubernetes: [ "v1.24.6", "v1.25.8"]
        replicas: ["1"]
        rancherVersion : ["2.7.2"]
    runs-on: ubuntu-latest
    needs: prepare-build
    name: k8s ${{ matrix.kubernetes }} - Rancher ${{ matrix.rancherVersion }} - ${{ matrix.replicas }} replicas
    env:
      CHART: ${{ github.workspace }}/build/${{ needs.prepare-build.outputs.chart_name }}
      KUBE_VERSION: ${{ matrix.kubernetes }}
      OPERATOR_REPLICAS: ${{ matrix.replicas }}
      RANCHER_VERSION: ${{ matrix.rancherVersion }}
    steps:
      - uses: actions/checkout@v3
      - name: Download chart
        uses: actions/download-artifact@v3.0.2
        with:
          name: chart
          path: build
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - uses: actions/cache@v3.0.11
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-test-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-test-go-${{ hashFiles('**/go.sum') }}
      - name: Install KinD
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: kubernetes-sigs/kind
          tag: v0.16.0
          extension-matching: disable
          rename-to: kind
          chmod: 0755
          cache: enable
      - name: e2e tests
        run: make e2e-tests
      - name: Archive artifacts
        if: always()
        uses: actions/upload-artifact@v3.1.0
        with:
          name: ci-artifacts
          path: _artifacts
          if-no-files-found: ignore
