#
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
#

name: CI
on:
  push:
    tags:
      - v*
    branches:
      - master
      - main
  pull_request:

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.17.x]
        # TODO: Get this working on windows-latest
        os: [macos-latest, ubuntu-latest]
        include:
          - go-version: 1.16.x
            os: ubuntu-latest
    name: Build and Test (${{matrix.os}}, Go ${{ matrix.go-version }})
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install Protoc
      uses: arduino/setup-protoc@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        version: '3.19.1'
    - name: Install protoc-gen-go
      run: go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.27.1
    - name: Check Protobuf Generation
      run: go generate ./... && git diff -G'^[^/]' --exit-code
    - name: Install Linux packages
      run: sudo apt-get -y install libssl-dev libtspi-dev
      if: runner.os == 'Linux'
    - name: Install Mac packages
      run: brew install openssl
      if: runner.os == 'macOS'
    - name: Install Windows packages
      run: choco install openssl
      if: runner.os == 'Windows'
    - name: Build
      run: go build -v ./...
    - name: Test
      run: go test -v ./...

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install Linux packages
      run: sudo apt-get -y install libssl-dev libtspi-dev
    - name: Check for CGO Warnings (gcc)
      run: CGO_CFLAGS=-Werror CC=gcc go build ./...
    - name: Check for CGO Warnings (clang)
      run: CGO_CFLAGS=-Werror CC=clang go build ./...
    - name: Lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.42
        skip-go-installation: true
        args: >
          -D errcheck
          -E stylecheck
          -E goimports
          -E misspell
          -E revive
          -E gofmt
          -E goimports
          --exclude-use-default=false
          --max-same-issues=0
          --max-issues-per-linter=0
